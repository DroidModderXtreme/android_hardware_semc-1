diff --git a/external/bluetooth/bluez/tools/hciattach.c b/external/bluetooth/bluez/tools/hciattach.c
index 62fbaff..e6c2e5f 100644
--- a/external/bluetooth/bluez/tools/hciattach.c
+++ b/external/bluetooth/bluez/tools/hciattach.c
@@ -1076,6 +1076,10 @@ struct uart_t uart[] = {
 	{ "texasalt",   0x0000, 0x0000, HCI_UART_LL,   115200, 115200,
 				FLOW_CTL, DISABLE_PM, NULL, texasalt, NULL   },
 
+	/* ST-Ericsson CG2900 GPS FM Bluetooth combo controller */
+	{ "cg2900",     0x0000, 0x0000, HCI_UART_STE,  115200, 115200,
+				FLOW_CTL, DISABLE_PM, NULL, NULL     },
+
 	/* ST Microelectronics minikits based on STLC2410/STLC2415 */
 	{ "st",         0x0000, 0x0000, HCI_UART_H4,    57600, 115200,
 				FLOW_CTL, DISABLE_PM,  NULL, st       },
@@ -1179,10 +1183,10 @@ static struct uart_t * get_by_type(char *type)
 }
 
 /* Initialize UART driver */
-static int init_uart(char *dev, struct uart_t *u, int send_break, int raw)
+static int init_uart(char *dev, struct uart_t *u, int send_break, int raw, int line_disc)
 {
 	struct termios ti;
-	int fd, i;
+	int fd;
 	unsigned long flags = 0;
 
 	if (raw)
@@ -1242,8 +1246,7 @@ static int init_uart(char *dev, struct uart_t *u, int send_break, int raw)
 	}
 
 	/* Set TTY to N_HCI line discipline */
-	i = N_HCI;
-	if (ioctl(fd, TIOCSETD, &i) < 0) {
+	if (ioctl(fd, TIOCSETD, &line_disc) < 0) {
 		perror("Can't set line discipline");
 		return -1;
 	}
@@ -1268,7 +1271,7 @@ static void usage(void)
 {
 	printf("hciattach - HCI UART driver initialization utility\n");
 	printf("Usage:\n");
-	printf("\thciattach [-n] [-p] [-b] [-r] [-t timeout] [-s initial_speed] <tty> <type | id> [speed] [flow|noflow] [bdaddr]\n");
+	printf("\thciattach [-n] [-p] [-a line_disc_nr] [-b] [-r] [-t timeout] [-s initial_speed] <tty> <type | id> [speed] [flow|noflow] [bdaddr]\n");
 	printf("\thciattach -l\n");
 }
 
@@ -1277,6 +1280,7 @@ int main(int argc, char *argv[])
 	struct uart_t *u = NULL;
 	int detach, printpid, raw, opt, i, n, ld, err;
 	int to = 10;
+	int line_disc = N_HCI;
 	int init_speed = 0;
 	int send_break = 0;
 	pid_t pid;
@@ -1289,8 +1293,11 @@ int main(int argc, char *argv[])
 	printpid = 0;
 	raw = 0;
 
-	while ((opt=getopt(argc, argv, "bnpt:s:lr")) != EOF) {
+	while ((opt=getopt(argc, argv, "bnpt:s:lra:")) != EOF) {
 		switch(opt) {
+		case 'a':
+			line_disc = atoi(optarg);
+			break;
 		case 'b':
 			send_break = 1;
 			break;
@@ -1406,7 +1413,7 @@ int main(int argc, char *argv[])
 	alarm(to);
 	bcsp_max_retries = to;
 
-	n = init_uart(dev, u, send_break, raw);
+	n = init_uart(dev, u, send_break, raw, line_disc);
 	if (n < 0) {
 		perror("Can't initialize device");
 		exit(1);
diff --git a/external/bluetooth/bluez/tools/hciattach.h b/external/bluetooth/bluez/tools/hciattach.h
index 1b23ad7..026885e 100644
--- a/external/bluetooth/bluez/tools/hciattach.h
+++ b/external/bluetooth/bluez/tools/hciattach.h
@@ -39,6 +39,7 @@
 #define HCI_UART_H4DS	3
 #define HCI_UART_LL	4
 #define HCI_UART_ATH3K  5
+#define HCI_UART_STE 6
 
 #define HCI_UART_RAW_DEVICE	0
 #define HCI_UART_RESET_ON_INIT	1
diff --git a/external/bluetooth/bluez/android/Android.mk b/external/bluetooth/bluez/android/Android.mk
index 082161c..76b5abb 100644
--- a/external/bluetooth/bluez/android/Android.mk
+++ b/external/bluetooth/bluez/android/Android.mk
@@ -461,3 +461,30 @@ LOCAL_REQUIRED_MODULES := \
 include $(BUILD_EXECUTABLE)
 
 endif
+
+#
+# hciattach
+#
+
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES:= \
+	bluez/tools/hciattach.c \
+	bluez/tools/hciattach_st.c \
+	bluez/tools/hciattach_ti.c \
+	bluez/tools/hciattach_tialt.c \
+	bluez/tools/hciattach_ath3k.c \
+	bluez/tools/hciattach_qualcomm.c \
+	bluez/tools/hciattach_intel.c
+
+LOCAL_CFLAGS := $(BLUEZ_COMMON_CFLAGS)
+
+LOCAL_C_INCLUDES:= \
+	$(LOCAL_PATH)/bluez/lib \
+	$(LOCAL_PATH)/bluez/android \
+	$(LOCAL_PATH)/bluez/tools
+
+LOCAL_MODULE_PATH := $(TARGET_OUT_EXECUTABLES)
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE := hciattach
+
+include $(BUILD_EXECUTABLE)
diff --git a/external/bluetooth/bluez/ppoll.h b/external/bluetooth/bluez/android/ppoll.h
new file mode 100644
index 0000000..1dfafa8
--- /dev/null
+++ b/external/bluetooth/bluez/android/ppoll.h
@@ -0,0 +1,16 @@
+#ifdef ppoll
+#undef ppoll
+#endif

+#define ppoll compat_ppoll

+static inline int compat_ppoll(struct pollfd *fds, nfds_t nfds,
+                const struct timespec *timeout, const sigset_t *sigmask)
+{
+        if (timeout == NULL)
+                return poll(fds, nfds, -1);
+        else if (timeout->tv_sec == 0)
+                return poll(fds, nfds, 500);
+        else
+                return poll(fds, nfds, timeout->tv_sec * 1000);
+}
